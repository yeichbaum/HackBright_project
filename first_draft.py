"""Hangman game"""
# def random_word_generator(word_from_computer):
#     """ this is where the computer will generate a random word to test the player"""
#     #add code-ask Becca
from random_words import RandomWords

# chosen_word = None
misses = []

def get_random_word():
    random_word = RandomWords()
    chosen_word = random_word.random_word()
    return chosen_word

def create_spaces_for_word(chosen_word):
    """ this function uses the word generated by the computer 
    or through the other player to create the right number of spaces for the guesser"""

    for number in chosen_word:
        print " _ ",
# def separating_letters_from_word(chosen_word):
#     chosen_word = 

# def guessing_the_letters(user_guess_a_letter):
#     if guess in chosen_word
#         retuen guess

# def hangman_stand():

hangman_figures = [ 

    """ 
    ________
    |      |
    |      |
    |          
    |     
    |     
    |          
    |     
    |
    |
    |_____

    """,
    """
    ________
    |      |
    |      |
    |      _    
    |     (_)
    |     
    |          
    |     
    |
    |
    |_____

    """,
    """
     ________
     |      |
     |      |
     |      _    
     |     (_)
     |      |
     |      |    
     |      
     |
     |
     |_____

    """, """
     ________
     |      |
     |      |
     |      _    
     |     (_)
     |     \|
     |      |    
     |      
     |
     |
     |_____

    ""","""
     ________
     |      |
     |      |
     |      _    
     |     (_)
     |     \|/
     |      |    
     |      
     |
     |
     |_____

    ""","""

     ________
     |      |
     |      |
     |      _    
     |     (_)
     |     \|/
     |      |    
     |     / 
     |
     |
     |_____

    ""","""
     ________
     |      |
     |      |
     |      _    
     |     (_)
     |     \|/
     |      |    
     |     / \ 
     |
     |
     |_____
"""]
# print hangman_figures[1]
def check_if_guessed_letter_is_wrong_or_right(user_guess_letter, chosen_word, user_guessed_word):
    """ this function is used to see if the letter the user picked is a letter
    that correctly belongs to the word they are guessing"""
    index = 0
    correct_guess_index = []
    for character in chosen_word:
        if character == user_guess_letter:
            correct_guess_index.append(index)
        index = index + 1
    if len(correct_guess_index) == 0:
        misses.append(user_guess_letter)
        # print hangman_figures[len(misses) - 1]
    else:
        for index in correct_guess_index:
            user_guessed_word = list(user_guessed_word)
            user_guessed_word[index] = user_guess_letter
            user_guessed_word = "".join(user_guessed_word)
   
    print user_guessed_word
    print misses
    if len(misses) == 0:
        print hangman_figures[0]
    else:
        print hangman_figures[len(misses)]
    return user_guessed_word, misses, chosen_word

def heck_if_guessed_word_is_wrong_or_right(word_guess)

def player_options_continuing_game(user_guessed_word, misses, chosen_word):
    """ this function  asks the player for a letter and also gives the
    option of exiting """
    guess_letter_or_word = None
    while guess_letter_or_word != "c":
        guess_letter_or_word = raw_input("\nWould you like to guess a \nletter(a) \n a word(b) \nor exit the game(c)? \nUse a, b, or c \n>>> ")
        if guess_letter_or_word == "a":
            letter_guess = raw_input("What is your letter guess? \n>>> ")
            user_guessed_word, misses, chosen_word = check_if_guessed_letter_is_wrong_or_right(letter_guess, chosen_word, user_guessed_word)
            if user_guessed_word == chosen_word:
                print "Congratulations! You guessed {} correctly!".format(chosen_word)
                break
            elif len(misses) == 6:
                print "Uh oh, you had 6 incorrect guesses and you died. Better luck next time! The word was {}".format(chosen_word)
                break
        elif guess_letter_or_word == "b":
            word_guess = raw_input("what is your word guess?(make sure there are no typos or extra spaces) \n>>> ")
            check_if_guessed_word_is_wrong_or_right(word_guess)
        else:
            print "Sorry, {} is not an option.".format(guess_letter_or_word)
        # player_options_continuing_game()




def main():
     # prints menu for the player and asks the player which mode the player/s want to play(i.e. 1 or 2 player mode)
    play_or_not = raw_input("Would you like to play Hangman : yes or no \n >>> ")
    if play_or_not == "yes":
        mode_choice = str(raw_input("To play hangman choose a mode: \n a) player versus computer \n b) two player mode \n >>>"))
        if mode_choice == "a":
            chosen_word = get_random_word()
            # chosen_word = raw_input("type word here \n >>>")
            create_spaces_for_word(chosen_word)
            user_guessed_word = "*" * len(chosen_word)
            # misses = []
            player_options_continuing_game(user_guessed_word, misses, chosen_word)
        elif mode_choice == "b":
            player_word = raw_input("Pick the player who will provide the word and type the word below. \n(make sure there are no typos or extra spaces) \n >>>")
            chosen_word = player_word
            create_spaces_for_word(chosen_word)
            user_guessed_word = "*" * len(chosen_word)
            # misses = []
            player_options_continuing_game(user_guessed_word, misses, chosen_word)
    elif play_or_not == "no":
        pass
    else:
        print "Sorry, {} is not an option.".format(play_or_not)
main()

     